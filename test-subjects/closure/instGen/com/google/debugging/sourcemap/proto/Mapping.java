// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/google/debugging/sourcemap/proto/mapping.proto

package com.google.debugging.sourcemap.proto;

public final class Mapping {
  static {
    CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.ping();
  }

  private Mapping() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface LineMappingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 line_number = 1;
    boolean hasLineNumber();
    int getLineNumber();

    // optional int32 column_position = 2;
    boolean hasColumnPosition();
    int getColumnPosition();

    // optional .sourcemap.OriginalMapping original_mapping = 3;
    boolean hasOriginalMapping();
    com.google.debugging.sourcemap.proto.Mapping.OriginalMapping getOriginalMapping();
    com.google.debugging.sourcemap.proto.Mapping.OriginalMappingOrBuilder getOriginalMappingOrBuilder();
  }
  public static final class LineMapping extends
      com.google.protobuf.GeneratedMessage
      implements LineMappingOrBuilder {
    // Use LineMapping.newBuilder() to construct.
    private LineMapping(Builder builder) {
      super(builder);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[1]++;
    }
    private LineMapping(boolean noInit) {}

    private static final LineMapping defaultInstance;
    public static LineMapping getDefaultInstance() {
      return defaultInstance;
    }

    public LineMapping getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.debugging.sourcemap.proto.Mapping.internal_static_sourcemap_LineMapping_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.debugging.sourcemap.proto.Mapping.internal_static_sourcemap_LineMapping_fieldAccessorTable;
    }

    private int bitField0_;
    // optional int32 line_number = 1;
    public static final int LINE_NUMBER_FIELD_NUMBER = 1;
    private int lineNumber_;
    public boolean hasLineNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getLineNumber() {
      return lineNumber_;
    }

    // optional int32 column_position = 2;
    public static final int COLUMN_POSITION_FIELD_NUMBER = 2;
    private int columnPosition_;
    public boolean hasColumnPosition() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getColumnPosition() {
      return columnPosition_;
    }

    // optional .sourcemap.OriginalMapping original_mapping = 3;
    public static final int ORIGINAL_MAPPING_FIELD_NUMBER = 3;
    private com.google.debugging.sourcemap.proto.Mapping.OriginalMapping originalMapping_;
    public boolean hasOriginalMapping() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.debugging.sourcemap.proto.Mapping.OriginalMapping getOriginalMapping() {
      return originalMapping_;
    }
    public com.google.debugging.sourcemap.proto.Mapping.OriginalMappingOrBuilder getOriginalMappingOrBuilder() {
      return originalMapping_;
    }

    private void initFields() {
      lineNumber_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[2]++;
      columnPosition_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[3]++;
      originalMapping_ = com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDefaultInstance();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[4]++;
    }
    private byte memoizedIsInitialized = -1;
  {
    CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[5]++;
  }
    public final boolean isInitialized() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[6]++;
      byte isInitialized = memoizedIsInitialized;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[7]++;
int CodeCoverConditionCoverageHelper_C1;
      if ((((((CodeCoverConditionCoverageHelper_C1 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C1 |= (2)) == 0 || true) &&
 ((isInitialized != -1) && 
  ((CodeCoverConditionCoverageHelper_C1 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[1].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C1, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[1].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C1, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[1]++; return isInitialized == 1;
} else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[2]++;}

      memoizedIsInitialized = 1;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[8]++;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[9]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[10]++;
int CodeCoverConditionCoverageHelper_C2;
      if ((((((CodeCoverConditionCoverageHelper_C2 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C2 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000001) == 0x00000001) && 
  ((CodeCoverConditionCoverageHelper_C2 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[2].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C2, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[2].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C2, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[3]++;
        output.writeInt32(1, lineNumber_);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[11]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[4]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[12]++;
int CodeCoverConditionCoverageHelper_C3;
      if ((((((CodeCoverConditionCoverageHelper_C3 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C3 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000002) == 0x00000002) && 
  ((CodeCoverConditionCoverageHelper_C3 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[3].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C3, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[3].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C3, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[5]++;
        output.writeInt32(2, columnPosition_);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[13]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[6]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[14]++;
int CodeCoverConditionCoverageHelper_C4;
      if ((((((CodeCoverConditionCoverageHelper_C4 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C4 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000004) == 0x00000004) && 
  ((CodeCoverConditionCoverageHelper_C4 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[4].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C4, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[4].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C4, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[7]++;
        output.writeMessage(3, originalMapping_);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[15]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[8]++;}
      getUnknownFields().writeTo(output);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[16]++;
    }

    private int memoizedSerializedSize = -1;
  {
    CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[17]++;
  }
    public int getSerializedSize() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[18]++;
      int size = memoizedSerializedSize;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[19]++;
int CodeCoverConditionCoverageHelper_C5;
      if ((((((CodeCoverConditionCoverageHelper_C5 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C5 |= (2)) == 0 || true) &&
 ((size != -1) && 
  ((CodeCoverConditionCoverageHelper_C5 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[5].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C5, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[5].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C5, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[9]++; return size;
} else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[10]++;}

      size = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[20]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[21]++;
int CodeCoverConditionCoverageHelper_C6;
      if ((((((CodeCoverConditionCoverageHelper_C6 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C6 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000001) == 0x00000001) && 
  ((CodeCoverConditionCoverageHelper_C6 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[6].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C6, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[6].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C6, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[11]++;
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, lineNumber_);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[22]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[12]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[23]++;
int CodeCoverConditionCoverageHelper_C7;
      if ((((((CodeCoverConditionCoverageHelper_C7 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C7 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000002) == 0x00000002) && 
  ((CodeCoverConditionCoverageHelper_C7 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[7].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C7, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[7].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C7, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[13]++;
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, columnPosition_);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[24]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[14]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[25]++;
int CodeCoverConditionCoverageHelper_C8;
      if ((((((CodeCoverConditionCoverageHelper_C8 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C8 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000004) == 0x00000004) && 
  ((CodeCoverConditionCoverageHelper_C8 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[8].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C8, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[8].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C8, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[15]++;
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, originalMapping_);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[26]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[16]++;}
      size += getUnknownFields().getSerializedSize();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[27]++;
      memoizedSerializedSize = size;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[28]++;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[29]++;
      Builder builder = newBuilder();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[30]++;
int CodeCoverConditionCoverageHelper_C9;
      if ((((((CodeCoverConditionCoverageHelper_C9 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C9 |= (2)) == 0 || true) &&
 ((builder.mergeDelimitedFrom(input)) && 
  ((CodeCoverConditionCoverageHelper_C9 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[9].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C9, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[9].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C9, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[17]++;
        return builder.buildParsed();

      } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[18]++;
        return null;
      }
    }
    public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[31]++;
      Builder builder = newBuilder();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[32]++;
int CodeCoverConditionCoverageHelper_C10;
      if ((((((CodeCoverConditionCoverageHelper_C10 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C10 |= (2)) == 0 || true) &&
 ((builder.mergeDelimitedFrom(input, extensionRegistry)) && 
  ((CodeCoverConditionCoverageHelper_C10 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[10].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C10, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[10].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C10, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[19]++;
        return builder.buildParsed();

      } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[20]++;
        return null;
      }
    }
    public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.LineMapping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.debugging.sourcemap.proto.Mapping.LineMapping prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[33]++;
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.google.debugging.sourcemap.proto.Mapping.LineMappingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.debugging.sourcemap.proto.Mapping.internal_static_sourcemap_LineMapping_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.debugging.sourcemap.proto.Mapping.internal_static_sourcemap_LineMapping_fieldAccessorTable;
      }

      // Construct using com.google.debugging.sourcemap.proto.Mapping.LineMapping.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[34]++;
      }

      private Builder(BuilderParent parent) {
        super(parent);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[35]++;
        maybeForceBuilderInitialization();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[36]++;
      }
      private void maybeForceBuilderInitialization() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[37]++;
int CodeCoverConditionCoverageHelper_C11;
        if ((((((CodeCoverConditionCoverageHelper_C11 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C11 |= (2)) == 0 || true) &&
 ((com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) && 
  ((CodeCoverConditionCoverageHelper_C11 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[11].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C11, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[11].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C11, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[21]++;
          getOriginalMappingFieldBuilder();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[38]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[22]++;}
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[39]++;
        lineNumber_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[40]++;
        bitField0_ = (bitField0_ & ~0x00000001);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[41]++;
        columnPosition_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[42]++;
        bitField0_ = (bitField0_ & ~0x00000002);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[43]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[44]++;
int CodeCoverConditionCoverageHelper_C12;
        if ((((((CodeCoverConditionCoverageHelper_C12 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C12 |= (2)) == 0 || true) &&
 ((originalMappingBuilder_ == null) && 
  ((CodeCoverConditionCoverageHelper_C12 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[12].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C12, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[12].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C12, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[23]++;
          originalMapping_ = com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDefaultInstance();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[45]++;

        } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[24]++;
          originalMappingBuilder_.clear();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[46]++;
        }
        bitField0_ = (bitField0_ & ~0x00000004);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[47]++;
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.debugging.sourcemap.proto.Mapping.LineMapping.getDescriptor();
      }

      public com.google.debugging.sourcemap.proto.Mapping.LineMapping getDefaultInstanceForType() {
        return com.google.debugging.sourcemap.proto.Mapping.LineMapping.getDefaultInstance();
      }

      public com.google.debugging.sourcemap.proto.Mapping.LineMapping build() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[48]++;
        com.google.debugging.sourcemap.proto.Mapping.LineMapping result = buildPartial();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[49]++;
int CodeCoverConditionCoverageHelper_C13;
        if ((((((CodeCoverConditionCoverageHelper_C13 = 0) == 0) || true) && (!
(((CodeCoverConditionCoverageHelper_C13 |= (2)) == 0 || true) &&
 ((result.isInitialized()) && 
  ((CodeCoverConditionCoverageHelper_C13 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[13].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C13, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[13].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C13, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[25]++;
          throw newUninitializedMessageException(result);

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[26]++;}
        return result;
      }

      private com.google.debugging.sourcemap.proto.Mapping.LineMapping buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[50]++;
        com.google.debugging.sourcemap.proto.Mapping.LineMapping result = buildPartial();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[51]++;
int CodeCoverConditionCoverageHelper_C14;
        if ((((((CodeCoverConditionCoverageHelper_C14 = 0) == 0) || true) && (!
(((CodeCoverConditionCoverageHelper_C14 |= (2)) == 0 || true) &&
 ((result.isInitialized()) && 
  ((CodeCoverConditionCoverageHelper_C14 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[14].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C14, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[14].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C14, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[27]++;
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[28]++;}
        return result;
      }

      public com.google.debugging.sourcemap.proto.Mapping.LineMapping buildPartial() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[52]++;
        com.google.debugging.sourcemap.proto.Mapping.LineMapping result = new com.google.debugging.sourcemap.proto.Mapping.LineMapping(this);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[53]++;
        int from_bitField0_ = bitField0_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[54]++;
        int to_bitField0_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[55]++;
int CodeCoverConditionCoverageHelper_C15;
        if ((((((CodeCoverConditionCoverageHelper_C15 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C15 |= (2)) == 0 || true) &&
 (((from_bitField0_ & 0x00000001) == 0x00000001) && 
  ((CodeCoverConditionCoverageHelper_C15 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[15].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C15, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[15].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C15, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[29]++;
          to_bitField0_ |= 0x00000001;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[56]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[30]++;}
        result.lineNumber_ = lineNumber_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[57]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[58]++;
int CodeCoverConditionCoverageHelper_C16;
        if ((((((CodeCoverConditionCoverageHelper_C16 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C16 |= (2)) == 0 || true) &&
 (((from_bitField0_ & 0x00000002) == 0x00000002) && 
  ((CodeCoverConditionCoverageHelper_C16 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[16].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C16, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[16].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C16, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[31]++;
          to_bitField0_ |= 0x00000002;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[59]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[32]++;}
        result.columnPosition_ = columnPosition_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[60]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[61]++;
int CodeCoverConditionCoverageHelper_C17;
        if ((((((CodeCoverConditionCoverageHelper_C17 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C17 |= (2)) == 0 || true) &&
 (((from_bitField0_ & 0x00000004) == 0x00000004) && 
  ((CodeCoverConditionCoverageHelper_C17 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[17].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C17, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[17].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C17, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[33]++;
          to_bitField0_ |= 0x00000004;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[62]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[34]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[63]++;
int CodeCoverConditionCoverageHelper_C18;
        if ((((((CodeCoverConditionCoverageHelper_C18 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C18 |= (2)) == 0 || true) &&
 ((originalMappingBuilder_ == null) && 
  ((CodeCoverConditionCoverageHelper_C18 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[18].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C18, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[18].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C18, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[35]++;
          result.originalMapping_ = originalMapping_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[64]++;

        } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[36]++;
          result.originalMapping_ = originalMappingBuilder_.build();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[65]++;
        }
        result.bitField0_ = to_bitField0_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[66]++;
        onBuilt();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[67]++;
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[68]++;
int CodeCoverConditionCoverageHelper_C19;
        if ((((((CodeCoverConditionCoverageHelper_C19 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C19 |= (2)) == 0 || true) &&
 ((other instanceof com.google.debugging.sourcemap.proto.Mapping.LineMapping) && 
  ((CodeCoverConditionCoverageHelper_C19 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[19].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C19, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[19].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C19, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[37]++;
          return mergeFrom((com.google.debugging.sourcemap.proto.Mapping.LineMapping)other);

        } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[38]++;
          super.mergeFrom(other);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[69]++;
          return this;
        }
      }

      public Builder mergeFrom(com.google.debugging.sourcemap.proto.Mapping.LineMapping other) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[70]++;
int CodeCoverConditionCoverageHelper_C20;
        if ((((((CodeCoverConditionCoverageHelper_C20 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C20 |= (2)) == 0 || true) &&
 ((other == com.google.debugging.sourcemap.proto.Mapping.LineMapping.getDefaultInstance()) && 
  ((CodeCoverConditionCoverageHelper_C20 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[20].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C20, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[20].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C20, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[39]++; return this;
} else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[40]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[71]++;
int CodeCoverConditionCoverageHelper_C21;
        if ((((((CodeCoverConditionCoverageHelper_C21 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C21 |= (2)) == 0 || true) &&
 ((other.hasLineNumber()) && 
  ((CodeCoverConditionCoverageHelper_C21 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[21].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C21, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[21].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C21, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[41]++;
          setLineNumber(other.getLineNumber());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[72]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[42]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[73]++;
int CodeCoverConditionCoverageHelper_C22;
        if ((((((CodeCoverConditionCoverageHelper_C22 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C22 |= (2)) == 0 || true) &&
 ((other.hasColumnPosition()) && 
  ((CodeCoverConditionCoverageHelper_C22 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[22].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C22, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[22].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C22, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[43]++;
          setColumnPosition(other.getColumnPosition());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[74]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[44]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[75]++;
int CodeCoverConditionCoverageHelper_C23;
        if ((((((CodeCoverConditionCoverageHelper_C23 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C23 |= (2)) == 0 || true) &&
 ((other.hasOriginalMapping()) && 
  ((CodeCoverConditionCoverageHelper_C23 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[23].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C23, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[23].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C23, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[45]++;
          mergeOriginalMapping(other.getOriginalMapping());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[76]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[46]++;}
        this.mergeUnknownFields(other.getUnknownFields());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[77]++;
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[78]++;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[79]++;
byte CodeCoverTryBranchHelper_L1 = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.loops[1]++;


        while (true) {
if (CodeCoverTryBranchHelper_L1 == 0) {
  CodeCoverTryBranchHelper_L1++;
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.loops[1]--;
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.loops[2]++;
} else if (CodeCoverTryBranchHelper_L1 == 1) {
  CodeCoverTryBranchHelper_L1++;
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.loops[2]--;
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.loops[3]++;
}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[80]++;
          int tag = input.readTag();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[81]++;
          switch (tag) {
            case 0:
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[47]++;
              this.setUnknownFields(unknownFields.build());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[82]++;
              onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[83]++;
              return this;
            default:
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[48]++; {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[84]++;
int CodeCoverConditionCoverageHelper_C25;
              if ((((((CodeCoverConditionCoverageHelper_C25 = 0) == 0) || true) && (!
(((CodeCoverConditionCoverageHelper_C25 |= (2)) == 0 || true) &&
 ((parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) && 
  ((CodeCoverConditionCoverageHelper_C25 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[25].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C25, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[25].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C25, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[49]++;
                this.setUnknownFields(unknownFields.build());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[85]++;
                onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[86]++;
                return this;

              } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[50]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[87]++;
              break;
            }
            case 8:
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[51]++; {
              bitField0_ |= 0x00000001;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[88]++;
              lineNumber_ = input.readInt32();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[89]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[90]++;
              break;
            }
            case 16:
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[52]++; {
              bitField0_ |= 0x00000002;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[91]++;
              columnPosition_ = input.readInt32();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[92]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[93]++;
              break;
            }
            case 26:
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[53]++; {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[94]++;
              com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.Builder subBuilder = com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.newBuilder();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[95]++;
int CodeCoverConditionCoverageHelper_C26;
              if ((((((CodeCoverConditionCoverageHelper_C26 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C26 |= (2)) == 0 || true) &&
 ((hasOriginalMapping()) && 
  ((CodeCoverConditionCoverageHelper_C26 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[26].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C26, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[26].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C26, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[54]++;
                subBuilder.mergeFrom(getOriginalMapping());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[96]++;

              } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[55]++;}
              input.readMessage(subBuilder, extensionRegistry);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[97]++;
              setOriginalMapping(subBuilder.buildPartial());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[98]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[99]++;
              break;
            }
          }
        }
      }

      private int bitField0_;

      // optional int32 line_number = 1;
      private int lineNumber_ ;
      public boolean hasLineNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getLineNumber() {
        return lineNumber_;
      }
      public Builder setLineNumber(int value) {
        bitField0_ |= 0x00000001;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[100]++;
        lineNumber_ = value;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[101]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[102]++;
        return this;
      }
      public Builder clearLineNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[103]++;
        lineNumber_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[104]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[105]++;
        return this;
      }

      // optional int32 column_position = 2;
      private int columnPosition_ ;
      public boolean hasColumnPosition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getColumnPosition() {
        return columnPosition_;
      }
      public Builder setColumnPosition(int value) {
        bitField0_ |= 0x00000002;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[106]++;
        columnPosition_ = value;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[107]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[108]++;
        return this;
      }
      public Builder clearColumnPosition() {
        bitField0_ = (bitField0_ & ~0x00000002);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[109]++;
        columnPosition_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[110]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[111]++;
        return this;
      }

      // optional .sourcemap.OriginalMapping original_mapping = 3;
      private com.google.debugging.sourcemap.proto.Mapping.OriginalMapping originalMapping_ = com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDefaultInstance();
  {
    CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[112]++;
  }
      private com.google.protobuf.SingleFieldBuilder<
          com.google.debugging.sourcemap.proto.Mapping.OriginalMapping, com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.Builder, com.google.debugging.sourcemap.proto.Mapping.OriginalMappingOrBuilder> originalMappingBuilder_;
      public boolean hasOriginalMapping() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.debugging.sourcemap.proto.Mapping.OriginalMapping getOriginalMapping() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[113]++;
int CodeCoverConditionCoverageHelper_C27;
        if ((((((CodeCoverConditionCoverageHelper_C27 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C27 |= (2)) == 0 || true) &&
 ((originalMappingBuilder_ == null) && 
  ((CodeCoverConditionCoverageHelper_C27 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[27].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C27, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[27].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C27, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[56]++;
          return originalMapping_;

        } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[57]++;
          return originalMappingBuilder_.getMessage();
        }
      }
      public Builder setOriginalMapping(com.google.debugging.sourcemap.proto.Mapping.OriginalMapping value) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[114]++;
int CodeCoverConditionCoverageHelper_C28;
        if ((((((CodeCoverConditionCoverageHelper_C28 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C28 |= (2)) == 0 || true) &&
 ((originalMappingBuilder_ == null) && 
  ((CodeCoverConditionCoverageHelper_C28 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[28].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C28, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[28].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C28, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[58]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[115]++;
int CodeCoverConditionCoverageHelper_C29;
          if ((((((CodeCoverConditionCoverageHelper_C29 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C29 |= (2)) == 0 || true) &&
 ((value == null) && 
  ((CodeCoverConditionCoverageHelper_C29 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[29].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C29, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[29].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C29, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[60]++;
            throw new NullPointerException();

          } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[61]++;}
          originalMapping_ = value;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[116]++;
          onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[117]++;

        } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[59]++;
          originalMappingBuilder_.setMessage(value);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[118]++;
        }
        bitField0_ |= 0x00000004;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[119]++;
        return this;
      }
      public Builder setOriginalMapping(
          com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.Builder builderForValue) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[120]++;
int CodeCoverConditionCoverageHelper_C30;
        if ((((((CodeCoverConditionCoverageHelper_C30 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C30 |= (2)) == 0 || true) &&
 ((originalMappingBuilder_ == null) && 
  ((CodeCoverConditionCoverageHelper_C30 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[30].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C30, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[30].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C30, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[62]++;
          originalMapping_ = builderForValue.build();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[121]++;
          onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[122]++;

        } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[63]++;
          originalMappingBuilder_.setMessage(builderForValue.build());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[123]++;
        }
        bitField0_ |= 0x00000004;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[124]++;
        return this;
      }
      public Builder mergeOriginalMapping(com.google.debugging.sourcemap.proto.Mapping.OriginalMapping value) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[125]++;
int CodeCoverConditionCoverageHelper_C31;
        if ((((((CodeCoverConditionCoverageHelper_C31 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C31 |= (2)) == 0 || true) &&
 ((originalMappingBuilder_ == null) && 
  ((CodeCoverConditionCoverageHelper_C31 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[31].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C31, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[31].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C31, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[64]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[126]++;
int CodeCoverConditionCoverageHelper_C32;
          if ((((((CodeCoverConditionCoverageHelper_C32 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C32 |= (8)) == 0 || true) &&
 (((bitField0_ & 0x00000004) == 0x00000004) && 
  ((CodeCoverConditionCoverageHelper_C32 |= (4)) == 0 || true)))
) && 
(((CodeCoverConditionCoverageHelper_C32 |= (2)) == 0 || true) &&
 ((originalMapping_ != com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDefaultInstance()) && 
  ((CodeCoverConditionCoverageHelper_C32 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[32].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C32, 2) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[32].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C32, 2) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[66]++;
            originalMapping_ =
              com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.newBuilder(originalMapping_).mergeFrom(value).buildPartial();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[127]++;

          } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[67]++;
            originalMapping_ = value;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[128]++;
          }
          onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[129]++;

        } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[65]++;
          originalMappingBuilder_.mergeFrom(value);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[130]++;
        }
        bitField0_ |= 0x00000004;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[131]++;
        return this;
      }
      public Builder clearOriginalMapping() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[132]++;
int CodeCoverConditionCoverageHelper_C33;
        if ((((((CodeCoverConditionCoverageHelper_C33 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C33 |= (2)) == 0 || true) &&
 ((originalMappingBuilder_ == null) && 
  ((CodeCoverConditionCoverageHelper_C33 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[33].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C33, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[33].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C33, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[68]++;
          originalMapping_ = com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDefaultInstance();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[133]++;
          onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[134]++;

        } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[69]++;
          originalMappingBuilder_.clear();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[135]++;
        }
        bitField0_ = (bitField0_ & ~0x00000004);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[136]++;
        return this;
      }
      public com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.Builder getOriginalMappingBuilder() {
        bitField0_ |= 0x00000004;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[137]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[138]++;
        return getOriginalMappingFieldBuilder().getBuilder();
      }
      public com.google.debugging.sourcemap.proto.Mapping.OriginalMappingOrBuilder getOriginalMappingOrBuilder() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[139]++;
int CodeCoverConditionCoverageHelper_C34;
        if ((((((CodeCoverConditionCoverageHelper_C34 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C34 |= (2)) == 0 || true) &&
 ((originalMappingBuilder_ != null) && 
  ((CodeCoverConditionCoverageHelper_C34 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[34].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C34, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[34].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C34, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[70]++;
          return originalMappingBuilder_.getMessageOrBuilder();

        } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[71]++;
          return originalMapping_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.google.debugging.sourcemap.proto.Mapping.OriginalMapping, com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.Builder, com.google.debugging.sourcemap.proto.Mapping.OriginalMappingOrBuilder>
          getOriginalMappingFieldBuilder() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[140]++;
int CodeCoverConditionCoverageHelper_C35;
        if ((((((CodeCoverConditionCoverageHelper_C35 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C35 |= (2)) == 0 || true) &&
 ((originalMappingBuilder_ == null) && 
  ((CodeCoverConditionCoverageHelper_C35 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[35].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C35, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[35].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C35, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[72]++;
          originalMappingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.google.debugging.sourcemap.proto.Mapping.OriginalMapping, com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.Builder, com.google.debugging.sourcemap.proto.Mapping.OriginalMappingOrBuilder>(
                  originalMapping_,
                  getParentForChildren(),
                  isClean());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[141]++;
          originalMapping_ = null;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[142]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[73]++;}
        return originalMappingBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:sourcemap.LineMapping)
    }

    static {
      defaultInstance = new LineMapping(true);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[143]++;
      defaultInstance.initFields();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[144]++;
    }

    // @@protoc_insertion_point(class_scope:sourcemap.LineMapping)
  }

  public interface OriginalMappingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string original_file = 1;
    boolean hasOriginalFile();
    String getOriginalFile();

    // optional int32 line_number = 2;
    boolean hasLineNumber();
    int getLineNumber();

    // optional int32 column_position = 3;
    boolean hasColumnPosition();
    int getColumnPosition();

    // optional string identifier = 4;
    boolean hasIdentifier();
    String getIdentifier();
  }
  public static final class OriginalMapping extends
      com.google.protobuf.GeneratedMessage
      implements OriginalMappingOrBuilder {
    // Use OriginalMapping.newBuilder() to construct.
    private OriginalMapping(Builder builder) {
      super(builder);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[145]++;
    }
    private OriginalMapping(boolean noInit) {}

    private static final OriginalMapping defaultInstance;
    public static OriginalMapping getDefaultInstance() {
      return defaultInstance;
    }

    public OriginalMapping getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.debugging.sourcemap.proto.Mapping.internal_static_sourcemap_OriginalMapping_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.debugging.sourcemap.proto.Mapping.internal_static_sourcemap_OriginalMapping_fieldAccessorTable;
    }

    private int bitField0_;
    // optional string original_file = 1;
    public static final int ORIGINAL_FILE_FIELD_NUMBER = 1;
    private java.lang.Object originalFile_;
    public boolean hasOriginalFile() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getOriginalFile() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[146]++;
      java.lang.Object ref = originalFile_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[147]++;
int CodeCoverConditionCoverageHelper_C36;
      if ((((((CodeCoverConditionCoverageHelper_C36 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C36 |= (2)) == 0 || true) &&
 ((ref instanceof String) && 
  ((CodeCoverConditionCoverageHelper_C36 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[36].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C36, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[36].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C36, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[74]++;
        return (String) ref;

      } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[75]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[148]++;
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[149]++;
        String s = bs.toStringUtf8();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[150]++;
int CodeCoverConditionCoverageHelper_C37;
        if ((((((CodeCoverConditionCoverageHelper_C37 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C37 |= (2)) == 0 || true) &&
 ((com.google.protobuf.Internal.isValidUtf8(bs)) && 
  ((CodeCoverConditionCoverageHelper_C37 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[37].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C37, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[37].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C37, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[76]++;
          originalFile_ = s;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[151]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[77]++;}
        return s;
      }
    }
    private com.google.protobuf.ByteString getOriginalFileBytes() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[152]++;
      java.lang.Object ref = originalFile_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[153]++;
int CodeCoverConditionCoverageHelper_C38;
      if ((((((CodeCoverConditionCoverageHelper_C38 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C38 |= (2)) == 0 || true) &&
 ((ref instanceof String) && 
  ((CodeCoverConditionCoverageHelper_C38 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[38].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C38, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[38].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C38, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[78]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[154]++;
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        originalFile_ = b;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[155]++;
        return b;

      } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[79]++;
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 line_number = 2;
    public static final int LINE_NUMBER_FIELD_NUMBER = 2;
    private int lineNumber_;
    public boolean hasLineNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getLineNumber() {
      return lineNumber_;
    }

    // optional int32 column_position = 3;
    public static final int COLUMN_POSITION_FIELD_NUMBER = 3;
    private int columnPosition_;
    public boolean hasColumnPosition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getColumnPosition() {
      return columnPosition_;
    }

    // optional string identifier = 4;
    public static final int IDENTIFIER_FIELD_NUMBER = 4;
    private java.lang.Object identifier_;
    public boolean hasIdentifier() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getIdentifier() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[156]++;
      java.lang.Object ref = identifier_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[157]++;
int CodeCoverConditionCoverageHelper_C39;
      if ((((((CodeCoverConditionCoverageHelper_C39 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C39 |= (2)) == 0 || true) &&
 ((ref instanceof String) && 
  ((CodeCoverConditionCoverageHelper_C39 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[39].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C39, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[39].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C39, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[80]++;
        return (String) ref;

      } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[81]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[158]++;
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[159]++;
        String s = bs.toStringUtf8();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[160]++;
int CodeCoverConditionCoverageHelper_C40;
        if ((((((CodeCoverConditionCoverageHelper_C40 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C40 |= (2)) == 0 || true) &&
 ((com.google.protobuf.Internal.isValidUtf8(bs)) && 
  ((CodeCoverConditionCoverageHelper_C40 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[40].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C40, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[40].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C40, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[82]++;
          identifier_ = s;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[161]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[83]++;}
        return s;
      }
    }
    private com.google.protobuf.ByteString getIdentifierBytes() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[162]++;
      java.lang.Object ref = identifier_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[163]++;
int CodeCoverConditionCoverageHelper_C41;
      if ((((((CodeCoverConditionCoverageHelper_C41 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C41 |= (2)) == 0 || true) &&
 ((ref instanceof String) && 
  ((CodeCoverConditionCoverageHelper_C41 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[41].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C41, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[41].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C41, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[84]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[164]++;
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        identifier_ = b;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[165]++;
        return b;

      } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[85]++;
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      originalFile_ = "";
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[166]++;
      lineNumber_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[167]++;
      columnPosition_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[168]++;
      identifier_ = "";
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[169]++;
    }
    private byte memoizedIsInitialized = -1;
  {
    CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[170]++;
  }
    public final boolean isInitialized() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[171]++;
      byte isInitialized = memoizedIsInitialized;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[172]++;
int CodeCoverConditionCoverageHelper_C42;
      if ((((((CodeCoverConditionCoverageHelper_C42 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C42 |= (2)) == 0 || true) &&
 ((isInitialized != -1) && 
  ((CodeCoverConditionCoverageHelper_C42 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[42].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C42, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[42].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C42, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[86]++; return isInitialized == 1;
} else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[87]++;}

      memoizedIsInitialized = 1;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[173]++;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[174]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[175]++;
int CodeCoverConditionCoverageHelper_C43;
      if ((((((CodeCoverConditionCoverageHelper_C43 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C43 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000001) == 0x00000001) && 
  ((CodeCoverConditionCoverageHelper_C43 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[43].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C43, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[43].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C43, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[88]++;
        output.writeBytes(1, getOriginalFileBytes());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[176]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[89]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[177]++;
int CodeCoverConditionCoverageHelper_C44;
      if ((((((CodeCoverConditionCoverageHelper_C44 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C44 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000002) == 0x00000002) && 
  ((CodeCoverConditionCoverageHelper_C44 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[44].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C44, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[44].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C44, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[90]++;
        output.writeInt32(2, lineNumber_);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[178]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[91]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[179]++;
int CodeCoverConditionCoverageHelper_C45;
      if ((((((CodeCoverConditionCoverageHelper_C45 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C45 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000004) == 0x00000004) && 
  ((CodeCoverConditionCoverageHelper_C45 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[45].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C45, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[45].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C45, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[92]++;
        output.writeInt32(3, columnPosition_);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[180]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[93]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[181]++;
int CodeCoverConditionCoverageHelper_C46;
      if ((((((CodeCoverConditionCoverageHelper_C46 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C46 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000008) == 0x00000008) && 
  ((CodeCoverConditionCoverageHelper_C46 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[46].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C46, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[46].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C46, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[94]++;
        output.writeBytes(4, getIdentifierBytes());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[182]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[95]++;}
      getUnknownFields().writeTo(output);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[183]++;
    }

    private int memoizedSerializedSize = -1;
  {
    CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[184]++;
  }
    public int getSerializedSize() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[185]++;
      int size = memoizedSerializedSize;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[186]++;
int CodeCoverConditionCoverageHelper_C47;
      if ((((((CodeCoverConditionCoverageHelper_C47 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C47 |= (2)) == 0 || true) &&
 ((size != -1) && 
  ((CodeCoverConditionCoverageHelper_C47 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[47].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C47, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[47].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C47, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[96]++; return size;
} else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[97]++;}

      size = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[187]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[188]++;
int CodeCoverConditionCoverageHelper_C48;
      if ((((((CodeCoverConditionCoverageHelper_C48 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C48 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000001) == 0x00000001) && 
  ((CodeCoverConditionCoverageHelper_C48 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[48].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C48, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[48].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C48, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[98]++;
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getOriginalFileBytes());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[189]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[99]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[190]++;
int CodeCoverConditionCoverageHelper_C49;
      if ((((((CodeCoverConditionCoverageHelper_C49 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C49 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000002) == 0x00000002) && 
  ((CodeCoverConditionCoverageHelper_C49 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[49].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C49, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[49].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C49, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[100]++;
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, lineNumber_);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[191]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[101]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[192]++;
int CodeCoverConditionCoverageHelper_C50;
      if ((((((CodeCoverConditionCoverageHelper_C50 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C50 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000004) == 0x00000004) && 
  ((CodeCoverConditionCoverageHelper_C50 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[50].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C50, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[50].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C50, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[102]++;
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, columnPosition_);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[193]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[103]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[194]++;
int CodeCoverConditionCoverageHelper_C51;
      if ((((((CodeCoverConditionCoverageHelper_C51 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C51 |= (2)) == 0 || true) &&
 (((bitField0_ & 0x00000008) == 0x00000008) && 
  ((CodeCoverConditionCoverageHelper_C51 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[51].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C51, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[51].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C51, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[104]++;
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getIdentifierBytes());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[195]++;

      } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[105]++;}
      size += getUnknownFields().getSerializedSize();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[196]++;
      memoizedSerializedSize = size;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[197]++;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[198]++;
      Builder builder = newBuilder();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[199]++;
int CodeCoverConditionCoverageHelper_C52;
      if ((((((CodeCoverConditionCoverageHelper_C52 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C52 |= (2)) == 0 || true) &&
 ((builder.mergeDelimitedFrom(input)) && 
  ((CodeCoverConditionCoverageHelper_C52 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[52].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C52, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[52].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C52, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[106]++;
        return builder.buildParsed();

      } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[107]++;
        return null;
      }
    }
    public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[200]++;
      Builder builder = newBuilder();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[201]++;
int CodeCoverConditionCoverageHelper_C53;
      if ((((((CodeCoverConditionCoverageHelper_C53 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C53 |= (2)) == 0 || true) &&
 ((builder.mergeDelimitedFrom(input, extensionRegistry)) && 
  ((CodeCoverConditionCoverageHelper_C53 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[53].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C53, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[53].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C53, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[108]++;
        return builder.buildParsed();

      } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[109]++;
        return null;
      }
    }
    public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.google.debugging.sourcemap.proto.Mapping.OriginalMapping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.debugging.sourcemap.proto.Mapping.OriginalMapping prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[202]++;
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.google.debugging.sourcemap.proto.Mapping.OriginalMappingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.debugging.sourcemap.proto.Mapping.internal_static_sourcemap_OriginalMapping_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.debugging.sourcemap.proto.Mapping.internal_static_sourcemap_OriginalMapping_fieldAccessorTable;
      }

      // Construct using com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[203]++;
      }

      private Builder(BuilderParent parent) {
        super(parent);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[204]++;
        maybeForceBuilderInitialization();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[205]++;
      }
      private void maybeForceBuilderInitialization() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[206]++;
int CodeCoverConditionCoverageHelper_C54;
        if ((((((CodeCoverConditionCoverageHelper_C54 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C54 |= (2)) == 0 || true) &&
 ((com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) && 
  ((CodeCoverConditionCoverageHelper_C54 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[54].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C54, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[54].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C54, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[110]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[111]++;}
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[207]++;
        originalFile_ = "";
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[208]++;
        bitField0_ = (bitField0_ & ~0x00000001);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[209]++;
        lineNumber_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[210]++;
        bitField0_ = (bitField0_ & ~0x00000002);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[211]++;
        columnPosition_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[212]++;
        bitField0_ = (bitField0_ & ~0x00000004);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[213]++;
        identifier_ = "";
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[214]++;
        bitField0_ = (bitField0_ & ~0x00000008);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[215]++;
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDescriptor();
      }

      public com.google.debugging.sourcemap.proto.Mapping.OriginalMapping getDefaultInstanceForType() {
        return com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDefaultInstance();
      }

      public com.google.debugging.sourcemap.proto.Mapping.OriginalMapping build() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[216]++;
        com.google.debugging.sourcemap.proto.Mapping.OriginalMapping result = buildPartial();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[217]++;
int CodeCoverConditionCoverageHelper_C55;
        if ((((((CodeCoverConditionCoverageHelper_C55 = 0) == 0) || true) && (!
(((CodeCoverConditionCoverageHelper_C55 |= (2)) == 0 || true) &&
 ((result.isInitialized()) && 
  ((CodeCoverConditionCoverageHelper_C55 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[55].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C55, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[55].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C55, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[112]++;
          throw newUninitializedMessageException(result);

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[113]++;}
        return result;
      }

      private com.google.debugging.sourcemap.proto.Mapping.OriginalMapping buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[218]++;
        com.google.debugging.sourcemap.proto.Mapping.OriginalMapping result = buildPartial();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[219]++;
int CodeCoverConditionCoverageHelper_C56;
        if ((((((CodeCoverConditionCoverageHelper_C56 = 0) == 0) || true) && (!
(((CodeCoverConditionCoverageHelper_C56 |= (2)) == 0 || true) &&
 ((result.isInitialized()) && 
  ((CodeCoverConditionCoverageHelper_C56 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[56].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C56, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[56].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C56, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[114]++;
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[115]++;}
        return result;
      }

      public com.google.debugging.sourcemap.proto.Mapping.OriginalMapping buildPartial() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[220]++;
        com.google.debugging.sourcemap.proto.Mapping.OriginalMapping result = new com.google.debugging.sourcemap.proto.Mapping.OriginalMapping(this);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[221]++;
        int from_bitField0_ = bitField0_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[222]++;
        int to_bitField0_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[223]++;
int CodeCoverConditionCoverageHelper_C57;
        if ((((((CodeCoverConditionCoverageHelper_C57 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C57 |= (2)) == 0 || true) &&
 (((from_bitField0_ & 0x00000001) == 0x00000001) && 
  ((CodeCoverConditionCoverageHelper_C57 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[57].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C57, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[57].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C57, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[116]++;
          to_bitField0_ |= 0x00000001;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[224]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[117]++;}
        result.originalFile_ = originalFile_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[225]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[226]++;
int CodeCoverConditionCoverageHelper_C58;
        if ((((((CodeCoverConditionCoverageHelper_C58 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C58 |= (2)) == 0 || true) &&
 (((from_bitField0_ & 0x00000002) == 0x00000002) && 
  ((CodeCoverConditionCoverageHelper_C58 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[58].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C58, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[58].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C58, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[118]++;
          to_bitField0_ |= 0x00000002;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[227]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[119]++;}
        result.lineNumber_ = lineNumber_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[228]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[229]++;
int CodeCoverConditionCoverageHelper_C59;
        if ((((((CodeCoverConditionCoverageHelper_C59 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C59 |= (2)) == 0 || true) &&
 (((from_bitField0_ & 0x00000004) == 0x00000004) && 
  ((CodeCoverConditionCoverageHelper_C59 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[59].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C59, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[59].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C59, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[120]++;
          to_bitField0_ |= 0x00000004;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[230]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[121]++;}
        result.columnPosition_ = columnPosition_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[231]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[232]++;
int CodeCoverConditionCoverageHelper_C60;
        if ((((((CodeCoverConditionCoverageHelper_C60 = 0) == 0) || true) && ((
(((CodeCoverConditionCoverageHelper_C60 |= (2)) == 0 || true) &&
 (((from_bitField0_ & 0x00000008) == 0x00000008) && 
  ((CodeCoverConditionCoverageHelper_C60 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[60].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C60, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[60].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C60, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[122]++;
          to_bitField0_ |= 0x00000008;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[233]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[123]++;}
        result.identifier_ = identifier_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[234]++;
        result.bitField0_ = to_bitField0_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[235]++;
        onBuilt();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[236]++;
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[237]++;
int CodeCoverConditionCoverageHelper_C61;
        if ((((((CodeCoverConditionCoverageHelper_C61 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C61 |= (2)) == 0 || true) &&
 ((other instanceof com.google.debugging.sourcemap.proto.Mapping.OriginalMapping) && 
  ((CodeCoverConditionCoverageHelper_C61 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[61].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C61, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[61].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C61, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[124]++;
          return mergeFrom((com.google.debugging.sourcemap.proto.Mapping.OriginalMapping)other);

        } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[125]++;
          super.mergeFrom(other);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[238]++;
          return this;
        }
      }

      public Builder mergeFrom(com.google.debugging.sourcemap.proto.Mapping.OriginalMapping other) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[239]++;
int CodeCoverConditionCoverageHelper_C62;
        if ((((((CodeCoverConditionCoverageHelper_C62 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C62 |= (2)) == 0 || true) &&
 ((other == com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.getDefaultInstance()) && 
  ((CodeCoverConditionCoverageHelper_C62 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[62].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C62, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[62].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C62, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[126]++; return this;
} else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[127]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[240]++;
int CodeCoverConditionCoverageHelper_C63;
        if ((((((CodeCoverConditionCoverageHelper_C63 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C63 |= (2)) == 0 || true) &&
 ((other.hasOriginalFile()) && 
  ((CodeCoverConditionCoverageHelper_C63 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[63].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C63, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[63].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C63, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[128]++;
          setOriginalFile(other.getOriginalFile());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[241]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[129]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[242]++;
int CodeCoverConditionCoverageHelper_C64;
        if ((((((CodeCoverConditionCoverageHelper_C64 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C64 |= (2)) == 0 || true) &&
 ((other.hasLineNumber()) && 
  ((CodeCoverConditionCoverageHelper_C64 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[64].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C64, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[64].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C64, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[130]++;
          setLineNumber(other.getLineNumber());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[243]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[131]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[244]++;
int CodeCoverConditionCoverageHelper_C65;
        if ((((((CodeCoverConditionCoverageHelper_C65 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C65 |= (2)) == 0 || true) &&
 ((other.hasColumnPosition()) && 
  ((CodeCoverConditionCoverageHelper_C65 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[65].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C65, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[65].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C65, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[132]++;
          setColumnPosition(other.getColumnPosition());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[245]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[133]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[246]++;
int CodeCoverConditionCoverageHelper_C66;
        if ((((((CodeCoverConditionCoverageHelper_C66 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C66 |= (2)) == 0 || true) &&
 ((other.hasIdentifier()) && 
  ((CodeCoverConditionCoverageHelper_C66 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[66].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C66, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[66].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C66, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[134]++;
          setIdentifier(other.getIdentifier());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[247]++;

        } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[135]++;}
        this.mergeUnknownFields(other.getUnknownFields());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[248]++;
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[249]++;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[250]++;
byte CodeCoverTryBranchHelper_L2 = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.loops[4]++;


        while (true) {
if (CodeCoverTryBranchHelper_L2 == 0) {
  CodeCoverTryBranchHelper_L2++;
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.loops[4]--;
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.loops[5]++;
} else if (CodeCoverTryBranchHelper_L2 == 1) {
  CodeCoverTryBranchHelper_L2++;
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.loops[5]--;
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.loops[6]++;
}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[251]++;
          int tag = input.readTag();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[252]++;
          switch (tag) {
            case 0:
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[136]++;
              this.setUnknownFields(unknownFields.build());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[253]++;
              onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[254]++;
              return this;
            default:
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[137]++; {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[255]++;
int CodeCoverConditionCoverageHelper_C68;
              if ((((((CodeCoverConditionCoverageHelper_C68 = 0) == 0) || true) && (!
(((CodeCoverConditionCoverageHelper_C68 |= (2)) == 0 || true) &&
 ((parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) && 
  ((CodeCoverConditionCoverageHelper_C68 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[68].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C68, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[68].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C68, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[138]++;
                this.setUnknownFields(unknownFields.build());
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[256]++;
                onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[257]++;
                return this;

              } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[139]++;}
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[258]++;
              break;
            }
            case 10:
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[140]++; {
              bitField0_ |= 0x00000001;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[259]++;
              originalFile_ = input.readBytes();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[260]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[261]++;
              break;
            }
            case 16:
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[141]++; {
              bitField0_ |= 0x00000002;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[262]++;
              lineNumber_ = input.readInt32();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[263]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[264]++;
              break;
            }
            case 24:
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[142]++; {
              bitField0_ |= 0x00000004;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[265]++;
              columnPosition_ = input.readInt32();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[266]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[267]++;
              break;
            }
            case 34:
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[143]++; {
              bitField0_ |= 0x00000008;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[268]++;
              identifier_ = input.readBytes();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[269]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[270]++;
              break;
            }
          }
        }
      }

      private int bitField0_;

      // optional string original_file = 1;
      private java.lang.Object originalFile_ = "";
  {
    CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[271]++;
  }
      public boolean hasOriginalFile() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getOriginalFile() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[272]++;
        java.lang.Object ref = originalFile_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[273]++;
int CodeCoverConditionCoverageHelper_C69;
        if ((((((CodeCoverConditionCoverageHelper_C69 = 0) == 0) || true) && (!(
(((CodeCoverConditionCoverageHelper_C69 |= (2)) == 0 || true) &&
 ((ref instanceof String) && 
  ((CodeCoverConditionCoverageHelper_C69 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[69].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C69, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[69].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C69, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[144]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[274]++;
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          originalFile_ = s;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[275]++;
          return s;

        } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[145]++;
          return (String) ref;
        }
      }
      public Builder setOriginalFile(String value) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[276]++;
int CodeCoverConditionCoverageHelper_C70;
        if ((((((CodeCoverConditionCoverageHelper_C70 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C70 |= (2)) == 0 || true) &&
 ((value == null) && 
  ((CodeCoverConditionCoverageHelper_C70 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[70].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C70, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[70].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C70, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[146]++;
    throw new NullPointerException();

  } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[147]++;}
  bitField0_ |= 0x00000001;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[277]++;
        originalFile_ = value;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[278]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[279]++;
        return this;
      }
      public Builder clearOriginalFile() {
        bitField0_ = (bitField0_ & ~0x00000001);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[280]++;
        originalFile_ = getDefaultInstance().getOriginalFile();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[281]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[282]++;
        return this;
      }
      void setOriginalFile(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[283]++;
        originalFile_ = value;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[284]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[285]++;
      }

      // optional int32 line_number = 2;
      private int lineNumber_ ;
      public boolean hasLineNumber() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getLineNumber() {
        return lineNumber_;
      }
      public Builder setLineNumber(int value) {
        bitField0_ |= 0x00000002;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[286]++;
        lineNumber_ = value;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[287]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[288]++;
        return this;
      }
      public Builder clearLineNumber() {
        bitField0_ = (bitField0_ & ~0x00000002);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[289]++;
        lineNumber_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[290]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[291]++;
        return this;
      }

      // optional int32 column_position = 3;
      private int columnPosition_ ;
      public boolean hasColumnPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getColumnPosition() {
        return columnPosition_;
      }
      public Builder setColumnPosition(int value) {
        bitField0_ |= 0x00000004;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[292]++;
        columnPosition_ = value;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[293]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[294]++;
        return this;
      }
      public Builder clearColumnPosition() {
        bitField0_ = (bitField0_ & ~0x00000004);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[295]++;
        columnPosition_ = 0;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[296]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[297]++;
        return this;
      }

      // optional string identifier = 4;
      private java.lang.Object identifier_ = "";
  {
    CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[298]++;
  }
      public boolean hasIdentifier() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getIdentifier() {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[299]++;
        java.lang.Object ref = identifier_;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[300]++;
int CodeCoverConditionCoverageHelper_C71;
        if ((((((CodeCoverConditionCoverageHelper_C71 = 0) == 0) || true) && (!(
(((CodeCoverConditionCoverageHelper_C71 |= (2)) == 0 || true) &&
 ((ref instanceof String) && 
  ((CodeCoverConditionCoverageHelper_C71 |= (1)) == 0 || true)))
))) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[71].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C71, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[71].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C71, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[148]++;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[301]++;
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          identifier_ = s;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[302]++;
          return s;

        } else {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[149]++;
          return (String) ref;
        }
      }
      public Builder setIdentifier(String value) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[303]++;
int CodeCoverConditionCoverageHelper_C72;
        if ((((((CodeCoverConditionCoverageHelper_C72 = 0) == 0) || true) && (
(((CodeCoverConditionCoverageHelper_C72 |= (2)) == 0 || true) &&
 ((value == null) && 
  ((CodeCoverConditionCoverageHelper_C72 |= (1)) == 0 || true)))
)) && (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[72].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C72, 1) || true)) || (CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.conditionCounters[72].incrementCounterOfBitMask(CodeCoverConditionCoverageHelper_C72, 1) && false)) {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[150]++;
    throw new NullPointerException();

  } else {
  CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.branches[151]++;}
  bitField0_ |= 0x00000008;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[304]++;
        identifier_ = value;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[305]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[306]++;
        return this;
      }
      public Builder clearIdentifier() {
        bitField0_ = (bitField0_ & ~0x00000008);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[307]++;
        identifier_ = getDefaultInstance().getIdentifier();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[308]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[309]++;
        return this;
      }
      void setIdentifier(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[310]++;
        identifier_ = value;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[311]++;
        onChanged();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[312]++;
      }

      // @@protoc_insertion_point(builder_scope:sourcemap.OriginalMapping)
    }

    static {
      defaultInstance = new OriginalMapping(true);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[313]++;
      defaultInstance.initFields();
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[314]++;
    }

    // @@protoc_insertion_point(class_scope:sourcemap.OriginalMapping)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sourcemap_LineMapping_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sourcemap_LineMapping_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_sourcemap_OriginalMapping_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_sourcemap_OriginalMapping_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[315]++;
    java.lang.String[] descriptorData = {
      "\n2com/google/debugging/sourcemap/proto/m" +
      "apping.proto\022\tsourcemap\"q\n\013LineMapping\022\023" +
      "\n\013line_number\030\001 \001(\005\022\027\n\017column_position\030\002" +
      " \001(\005\0224\n\020original_mapping\030\003 \001(\0132\032.sourcem" +
      "ap.OriginalMapping\"j\n\017OriginalMapping\022\025\n" +
      "\roriginal_file\030\001 \001(\t\022\023\n\013line_number\030\002 \001(" +
      "\005\022\027\n\017column_position\030\003 \001(\005\022\022\n\nidentifier" +
      "\030\004 \001(\tB&\n$com.google.debugging.sourcemap" +
      ".proto"
    };
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[316]++;
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[317]++;
          internal_static_sourcemap_LineMapping_descriptor =
            getDescriptor().getMessageTypes().get(0);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[318]++;
          internal_static_sourcemap_LineMapping_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sourcemap_LineMapping_descriptor,
              new java.lang.String[] { "LineNumber", "ColumnPosition", "OriginalMapping", },
              com.google.debugging.sourcemap.proto.Mapping.LineMapping.class,
              com.google.debugging.sourcemap.proto.Mapping.LineMapping.Builder.class);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[319]++;
          internal_static_sourcemap_OriginalMapping_descriptor =
            getDescriptor().getMessageTypes().get(1);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[320]++;
          internal_static_sourcemap_OriginalMapping_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_sourcemap_OriginalMapping_descriptor,
              new java.lang.String[] { "OriginalFile", "LineNumber", "ColumnPosition", "Identifier", },
              com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.class,
              com.google.debugging.sourcemap.proto.Mapping.OriginalMapping.Builder.class);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[321]++;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1.statements[322]++;
  }

  // @@protoc_insertion_point(outer_class_scope)
}

class CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1 extends org.codecover.instrumentation.java.measurement.CounterContainer {

  static {
    org.codecover.instrumentation.java.measurement.ProtocolImpl.getInstance(org.codecover.instrumentation.java.measurement.CoverageResultLogFile.getInstance(null), "fc723371-5766-4804-90bc-1687dd8f2639").addObservedContainer(new CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1 ());
  }
    public static long[] statements = new long[323];
    public static long[] branches = new long[152];

  public static final org.codecover.instrumentation.java.measurement.ConditionCounter[] conditionCounters = new org.codecover.instrumentation.java.measurement.ConditionCounter[73];
  static {
    final String SECTION_NAME = "com.google.debugging.sourcemap.proto.GEN-SRC-Mapping.java";
    final byte[] CONDITION_COUNTER_TYPES = {0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1};
    for (int i = 1; i <= 72; i++) {
      switch (CONDITION_COUNTER_TYPES[i]) {
        case 0 : break;
        case 1 : conditionCounters[i] = new org.codecover.instrumentation.java.measurement.SmallOneConditionCounter(SECTION_NAME, "C" + i); break;
        case 2 : conditionCounters[i] = new org.codecover.instrumentation.java.measurement.SmallTwoConditionCounter(SECTION_NAME, "C" + i); break;
        case 3 : conditionCounters[i] = new org.codecover.instrumentation.java.measurement.MediumConditionCounter(SECTION_NAME, "C" + i); break;
        case 4 : conditionCounters[i] = new org.codecover.instrumentation.java.measurement.LargeConditionCounter(SECTION_NAME, "C" + i); break;
      }
    }
  }
    public static long[] loops = new long[7];

  public CodeCoverCoverageCounter$8bph9bochc4ipekgx0946dajkkbc9k1 () {
    super("com.google.debugging.sourcemap.proto.GEN-SRC-Mapping.java");
  }

  public static void ping() {/* nothing to do*/}

  public void reset() {
      for (int i = 1; i <= 322; i++) {
        statements[i] = 0L;
      }
      for (int i = 1; i <= 151; i++) {
        branches[i] = 0L;
      }
    for (int i = 1; i <= 72; i++) {
      if (conditionCounters[i] != null) {
        conditionCounters[i].reset();
      }
    }
      for (int i = 1; i <= 6; i++) {
        loops[i] = 0L;
      }
  }

  public void serializeAndReset(org.codecover.instrumentation.measurement.CoverageCounterLog log) {
    log.startNamedSection("com.google.debugging.sourcemap.proto.GEN-SRC-Mapping.java");
      for (int i = 1; i <= 322; i++) {
        if (statements[i] != 0L) {
          log.passCounter("S" + i, statements[i]);
          statements[i] = 0L;
        }
      }
      for (int i = 1; i <= 151; i++) {
        if (branches[i] != 0L) {
          log.passCounter("B"+ i, branches[i]);
          branches[i] = 0L;
        }
      }
    for (int i = 1; i <= 72; i++) {
      if (conditionCounters[i] != null) {
        conditionCounters[i].serializeAndReset(log);
      }
    }
      for (int i = 1; i <= 2; i++) {
        if (loops[i * 3 - 2] != 0L) {
          log.passCounter("L" + i + "-0", loops[i * 3 - 2]);
          loops[i * 3 - 2] = 0L;
        }
        if ( loops[i * 3 - 1] != 0L) {
          log.passCounter("L" + i + "-1", loops[i * 3 - 1]);
          loops[i * 3 - 1] = 0L;
        }
        if ( loops[i * 3] != 0L) {
          log.passCounter("L" + i + "-2", loops[i * 3]);
          loops[i * 3] = 0L;
        }
      }
  }
}

