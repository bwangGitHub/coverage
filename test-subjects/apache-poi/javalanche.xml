<project name="Javalanche">
	
<!-- Properties can either be supplied on the command line, via a properties file or specified here -->
	<!--
	<property name="prefix" value=""/>
	<property name="tests" value=""/>
	<property name="javalanche" value=""/>
	<property name="cp" value=""/>
	-->

	<property name="project.jvm.args" value=""/>

	<property name="project.prefix" value="${prefix}"/>
	<property name="project.tests" value="${tests}"/>
	<property name="javalanche.location" value="${javalanche}" />
	<property name="javalanche.dist.dir" value="${javalanche}" />
	
		
	<import file="${javalanche.location}/import.xml"/>
	<import file="${javalanche.location}/src/main/resources/javalanche-tasks.xml" />
    <import file="${javalanche.location}/src/main/resources/javalanche-add-tasks.xml"/>
	
<!-- To compute the coverage or invariant impact (not supported in current version) of the mutations, one of these files has to be included. -->
<!--	<import file="${javalanche.location}/src/main/resources/invariant-build.xml" /> -->
<!--	<import file="${javalanche.location}/src/main/resources/coverage-include.xml" /> -->

	<!-- 
	Task that is called by the different stages of Javalanche.
	This task should not be called directly.
	-->
	<target name="javalancheTask">
		<mkdir dir="mutation-files/junit-reports"></mkdir>
		<junit dir="." printSummary="no" fork="true" forkmode="once" showoutput="true">
			<classpath>
				<pathelement path="${cp}"></pathelement>
				<path refid="javalanche.classpath.add" />
			</classpath>
			
			<jvmarg line="${javalanche.arg.line} ${project.jvm.args}" />
			
			<formatter type="xml"/>
			<formatter usefile="true" type="plain"/>
			<test todir="${javalanche.out.dir}/junit-reports" name="${javalanche.wrapper.testsuite}" />
		</junit>
	</target>	

	
	<target name="testParameters">
		<echo>
			project.prefix     : ${project.prefix} 
			project.tests 	   : ${project.tests} 
			cp                 : ${cp} 
			javalanche.location: ${javalanche.location}
			javalanche.dist.dir: ${javalanche.dist.dir}
		</echo>
	</target>	

	<target name="mutationTest" depends="startHsql,schemaexport,scanProject,scan,createSingleRandomTask,runSingleTask,analyzeResults,stopHsql"/>
	
	<!-- Added the following targets -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
	
	<target name="csc.test" depends="testTask1,testTask2,testTask3" />

	<target name="csc.run">
	    <property name="javalanche.stop.after.first.fail" value="false"/>
	    <foreach target="runMutations" param="mutation.file">
                <fileset dir="${mutation.dir}">
                    <include name="mutation-task*"/>
                </fileset>
            </foreach>
            <antcall target="analyzeResults"/>
	</target>

	<target name="csc.run.parallel">
	    <property name="javalanche.stop.after.first.fail" value="false"/>
	    <foreach target="runMutations" param="mutation.file">
                <fileset dir="${mutation.dir}">
                    <include name="mutation-task*"/>
                </fileset>
            </foreach>
	</target>

	<target name="csc.clean" depends="deleteResults,deleteMutations,cleanJavalanche" />

</project>
